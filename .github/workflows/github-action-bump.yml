name: Manual Release Workflow

on:
  workflow_dispatch: # This event allows manual triggering

permissions: write-all

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main and pull upstream master
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Git Pull main branch
        run: |
          git fetch origin main
          git checkout main
          git pull origin main

      - name: Create and checkout new branch
        run: |
          branch_name="bump-$(date +'%m-%d-%Y-%H-%M-%S')-branch"
          git checkout -b "$branch_name"
          git push --set-upstream origin "$branch_name"

      - name: Install jq
        run: sudo apt-get install jq

      - name: Bump Version in package.json
        id: bump_version_step
        run: |
          current_version=$(jq -r '.version' taco-shop/package.json)
          major_version=$(echo "$current_version" | cut -d. -f1)
          new_version="$((major_version + 1)).0.0"
          jq --arg new_version "$new_version" '.version |= $new_version' taco-shop/package.json > temp.json && mv temp.json taco-shop/package.json
          echo "::set-output name=version::$new_version"

      - name: Update Changelog
        run: |
          version="${{ steps.bump_version_step.outputs.version }}"
          sed -i "0,/\[Unreleased\]/s/\[Unreleased\]/[${version}]/" CHANGELOG.md

      - name: Commit Changes
        run: |
          git config --global user.email "senorTaquero@tacos.com"
          git config --global user.name "Don Taquero"
          git add taco-shop/package.json CHANGELOG.md
          git commit -m "Bump version to ${{ steps.bump_version_step.outputs.version }}"

      - name: Create tag
        run: |
          version="${{ steps.bump_version_step.outputs.version }}"
          git tag -a "v-${version}" -m "Version ${version}"

      - name: Push tag
        run: |
          version="${{ steps.bump_version_step.outputs.version }}"
          git push origin "v-${version}"
  
      - name: Bump Version in package.json
        id: bump_version_step_minor
        run: |
          current_version_B=$(jq -r '.version' taco-shop/package.json)
          major_version_B=$(echo "$current_version_B" | cut -d. -f1)
          minor_version_B=$(echo "$current_version_B" | cut -d. -f2)
          new_version_minor="$major_version_B.$((minor_version + 1)).0"
          jq --arg new_version_minor "$new_version_minor" '.version |= $new_version_minor' taco-shop/package.json > temp.json && mv temp.json taco-shop/package.json
          echo "::set-output name=version::$new_version_minor"
          git add taco-shop/package.json
          git commit -m "Bump version to ${new_version_minor}"

      - name: Search for 'Food' tag and add '##[Unreleased]'
        run: |
          # Find the line number where 'Food' tag is located in the file
          line_number=$(grep -n 'Food' CHANGELOG.md | cut -d':' -f1)
          
          if [ -n "$line_number" ]; then
          # Increment line number by 1 to add '##[Unreleased]' below the 'Food' tag
            new_line_number=$((line_number + 1))
            sed -i "${new_line_number}i##[Unreleased]" CHANGELOG.md
            git add CHANGELOG.md
            git commit -m "Bump"
          else
            echo "Tag 'Food' not found in CHANGELOG.md"
          fi

      - name: Push changes
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git push origin HEAD:${{ github.ref }}

      - name: Create Pull Request
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository }}/pulls
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}  # Use the secret containing your PAT
          body: |
            {
              "title": "Automated PR",
              "head": "${{ github.ref }}",
              "base": "main"  # Change 'main' to your base branch
            }

